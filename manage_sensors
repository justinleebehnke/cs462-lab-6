ruleset manage_sensors {
  meta {
    shares __testing
  }
  global {
    nameFromID = function(sensor_id) {
      "Sensor " + sensor_id + " Pico"
    }
    __testing = { "queries":
      [ { "name": "__testing" }
      //, { "name": "entry", "args": [ "key" ] }
      ] , "events":
      [ //{ "domain": "d1", "type": "t1" }
      //, { "domain": "d2", "type": "t2", "attrs": [ "a1", "a2" ] }
      ]
    }
  }
  
  rule new_sensor_created {
    select when sensor new_sensor
    pre {
      sensor_id = event:attr("sensor_id")
      exists = ent:sensors >< sensor_id
      eci = meta:eci
    }
    if exists then
      send_directive("sensor_ready", {"sensor_id":sensor_id})
    notfired {
      ent:sensors := ent:sensors.defaultsTo([]).union([sensor_id]);
      raise wrangler event "child_creation"
      attributes { "name": nameFromID(sensor_id),
               "color": "#ffff00",
               "sensor_id": sensor_id,
               "rids": ["temperature_store", "sensor_profile", "wovyn_base"] }
    }
  }
  
  rule store_new_sensor {
    select when wrangler child_initialized
    pre {
      the_sensor = {"id": event:attr("id"), "eci": event:attr("eci")}
      sensor_id = event:attr("rs_attrs"){"sensor_id"}
    }
    if sensor_id.klog("found sensor_id")
    then
      noop()
    fired {
      ent:sensors := ent:sensors.defaultsTo({});
      ent:sensors{[sensor_id]} := the_sensor
    }
  }
}
